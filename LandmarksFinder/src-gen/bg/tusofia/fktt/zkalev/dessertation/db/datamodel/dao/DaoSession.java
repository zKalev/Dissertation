package bg.tusofia.fktt.zkalev.dessertation.db.datamodel.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import bg.tusofia.fktt.zkalev.dessertation.db.datamodel.Place;
import bg.tusofia.fktt.zkalev.dessertation.db.datamodel.Photos;

import bg.tusofia.fktt.zkalev.dessertation.db.datamodel.dao.PlaceDao;
import bg.tusofia.fktt.zkalev.dessertation.db.datamodel.dao.PhotosDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig placeDaoConfig;
    private final DaoConfig photosDaoConfig;

    private final PlaceDao placeDao;
    private final PhotosDao photosDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        placeDaoConfig = daoConfigMap.get(PlaceDao.class).clone();
        placeDaoConfig.initIdentityScope(type);

        photosDaoConfig = daoConfigMap.get(PhotosDao.class).clone();
        photosDaoConfig.initIdentityScope(type);

        placeDao = new PlaceDao(placeDaoConfig, this);
        photosDao = new PhotosDao(photosDaoConfig, this);

        registerDao(Place.class, placeDao);
        registerDao(Photos.class, photosDao);
    }
    
    public void clear() {
        placeDaoConfig.getIdentityScope().clear();
        photosDaoConfig.getIdentityScope().clear();
    }

    public PlaceDao getPlaceDao() {
        return placeDao;
    }

    public PhotosDao getPhotosDao() {
        return photosDao;
    }

}
